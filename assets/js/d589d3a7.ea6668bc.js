"use strict";(self.webpackChunkheynky=self.webpackChunkheynky||[]).push([[162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2,sidebar_label:"Getting Started"},i="Getting Started",l={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Installation",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Getting Started"},sidebar:"clarigen",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Write tests with Clarigen",permalink:"/docs/write-tests-tutorial"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Clarinet dependency",id:"clarinet-dependency",level:3},{value:"<code>Clarigen.toml</code>",id:"clarigentoml",level:3},{value:"Generate some code!",id:"generate-some-code",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Clarigen's CLI is a Deno project - so you need to have Deno installed on your machine. In the future, we'll distribute standalone executables."),(0,a.kt)("p",null,"To install Clarigen, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"deno install -qAfn clarigen https://deno.land/x/clarigen/cli.ts\n")),(0,a.kt)("h3",{id:"clarinet-dependency"},"Clarinet dependency"),(0,a.kt)("p",null,"At the moment, using Clarigen requires that you have a basic Clarinet project setup. This allows Clarigen to re-use common configuration (like contracts, deployments, and requirements). If you don't have this yet, the easiest way to start is to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/clarinet#installation"},"install Clarinet")," and run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# change "my-project" to your project\'s name\nclarinet new my-project\n')),(0,a.kt)("h3",{id:"clarigentoml"},(0,a.kt)("inlineCode",{parentName:"h3"},"Clarigen.toml")),(0,a.kt)("p",null,"Your Clarigen-specfic configuration goes in ",(0,a.kt)("inlineCode",{parentName:"p"},"Clarigen.toml")," at the root of your project. To generate a basic configuration file, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"clarigen init\n")),(0,a.kt)("p",null,"In your newly-generated ",(0,a.kt)("inlineCode",{parentName:"p"},"Clarigen.toml")," file, you can specify if (and where) to generate code."),(0,a.kt)("p",null,"If you're writing Clarinet tests with Deno, specify ",(0,a.kt)("inlineCode",{parentName:"p"},"Deno.output"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="Clarigen.toml"',title:'"Clarigen.toml"'},'[deno]\noutput = "artifacts/clarigen.ts"\n')),(0,a.kt)("p",null,"If you want types for the web or Node.js, specify ",(0,a.kt)("inlineCode",{parentName:"p"},"esm.output")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="Clarigen.toml"',title:'"Clarigen.toml"'},'[esm]\noutput = "common/clarigen.ts\n')),(0,a.kt)("p",null,"If you don't want to generate code for either environment, just comment out that section's ",(0,a.kt)("inlineCode",{parentName:"p"},"output")," (or the section entirely)."),(0,a.kt)("p",null,"Learn more about ",(0,a.kt)("a",{parentName:"p",href:"./configuration"},"configuration")),(0,a.kt)("h2",{id:"generate-some-code"},"Generate some code!"),(0,a.kt)("p",null,"Now you have everything you need for Clarigen to start generating type-safe boilerplate for you. In your terminal, simply run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"clarigen\n")))}u.isMDXComponent=!0}}]);